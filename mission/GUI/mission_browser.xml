<?xml version="1.0"?>

<PropertyList>
	<name>mission-browser</name>
	<layout>vbox</layout>
	<!--width>850</width-->
	<!--height>600</height-->
	<!--color>
		<alpha>0.0</alpha>
	</color-->
	<!--x>20</x>
	<y>10</y>
	<draggable>false</draggable>
	<resizable>false</resizable-->

	<group>
		<layout>hbox</layout>
		<empty><stretch>1</stretch></empty>
		<text>
			<label>Mission browser</label>
			<!--halign>center</halign-->
		</text>
		<empty><stretch>1</stretch></empty>
		<button>
			<legend> </legend>
			<halign>right</halign>
			<pref-width>20</pref-width>
			<pref-height>20</pref-height>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>
	</group>

	<hrule/>

	<group>
		<layout>hbox</layout>
		<list>
			<name>mission_list</name>
			<pref-width>300</pref-width>
			<pref-height>250</pref-height>
			<halign>fill</halign>
			<valign>fill</valign>
			<stretch>true</stretch>
			<padding>6</padding>
			<property>/sim/mission/gui/selected-mission</property>
			<binding>
				<command>dialog-apply</command>
			</binding>
			<binding>
				<command>nasal</command>
				<script>
					#mission.start_mission(getprop("/sim/mission/gui/selected-mission"))
					select_mission();
				</script>
			</binding>
			<!--binding>
				<command>dialog-close</command>
			</binding-->
			<value>...</value>
			<value>...</value>
		</list>

		<group>
			<layout>vbox</layout>
			<canvas>
				<name>mission-image</name>
				<valign>fill</valign>
				<halign>fill</halign>
				<!-- stretch>true</stretch -->
				<pref-width>250</pref-width>
				<pref-height>250</pref-height>
				<nasal>
					<load> <![CDATA[
						var myCanvas1 = canvas.get( cmdarg() );
						myCanvas1.setColorBackground(1,1,1,0);
						var img = myCanvas1.createGroup().createChild("image");
						#img.setFile(mission.mission_root ~ "/image.png")
						#	.setSize(250, 250);

					]]> </load>
				</nasal>
			</canvas>
		</group>
	</group>

			<!--hrule/-->

	<textbox>
		<name>mission_description</name>
		<halign>fill</halign>
		<valign>fill</valign>
		<stretch>true</stretch>
		<pref-width>600</pref-width>
		<pref-height>200</pref-height>
		<padding>6</padding>
		<slider>20</slider>
		<editable>false</editable>
		<wrap>false</wrap>
		<property>/sim/mission/gui/data/description</property>
	</textbox>

	<hrule/>

	<button>
		<legend>Start mission</legend>
		<pref-height>30</pref-height>
		<binding>
			<command>nasal</command>
			<script>fgcommand("dialog-close", {"dialog-name":"mission-browser"});mission.start_mission(selected_mission)</script>
		</binding>
		<!--binding>
			<command>dialog-close</command>
		</binding-->
	</button>

	<nasal>
		<open> <![CDATA[
			var list = cmdarg().getNode("group[1]/list");
			var mission_root = "";
			var selected_mission = "";
			var data_node = props.getNode("sim/mission/gui/data", 1);
			data_node.setValues({description: ""});


			var dialog_update = func () {
				forindex (var i; arg) {
					var hash = {
						"object-name" : arg[i],
						"dialog-name" : "mission-browser"
					};
					fgcommand( "dialog-update", props.Node.new(hash) );
				}
			}

			var update_list = func {
				list.removeChildren("value");

				var dir = directory(getprop("/sim/fg-root") ~ "/Missions");
				foreach (var a; dir)
					if (a != "." and a != ".." and a != "Generic")
						list.addChild("value").setValue(a);

				dialog_update("mission_list");
			}

			var select_mission = func {
				selected_mission = getprop("/sim/mission/gui/selected-mission");
				mission_root = getprop("/sim/fg-root") ~ "/Missions/" ~ selected_mission;

				data_node.setValues({description: ""});
				io.read_properties(mission_root ~ "/metadata.xml", data_node);
				dialog_update("mission_description");


				img.set("src", mission_root ~ "/image.png").setSize(250, 250);
				
			}

			update_list();
		]]> </open>

		<close>
			#
		</close>
	</nasal>

</PropertyList>
